# Required. Database name for postgres
POSTGRES_DB=cncnet-python-map-api

# Required. Username for postgres DB
POSTGRES_USER=map_api

# The database password. Required on prod.
POSTGRES_PASSWORD=

# Required. The location where the postgres data will be saved. The docker volume mounts here
POSTGRES_DATA_DIR=./data/db/

# If you are running pytests on your machine and not via docker then you'll need to specify the host.
# In docker the host will always be DB, but when run locally it will probably be local host.
# The reason this is separate from production host is because putting PyCharm breakpoints in docker has issues
# and pytests often need to be run locally to have breakpoints work.
POSTGRES_TEST_HOST=db

# Port for postgres
POSTGRES_PORT=5432

# Required. The location where the app data (maps and such) will be saved on the docker host.
# The docker volume mounts here.
# You should have this backed up because it's where user-uploaded files will live.
# nginx and django will serve these files under the url ``/silo/``
HOST_MEDIA_ROOT=./data/cncnet_silo/

# Required. The directory where collected static files will be saved on the docker host.
# The docker volume mounts here.
# ``collectstatic`` will gather all static assets here to be served by nginx.
# Remember to run ``./manage.py collectstatic`` during build so that this directory will be populated.
# nginx and django will serve these files under the url ``/static/``
HOST_STATIC_ROOT=./data/cncnet_static/

# Django debug, never enable on prod
DEBUG=0

# Required, this is the crypto key used through django.
# Use `from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())`
# in a python shell to make one then add some random stuff to it.
SECRET_KEY=

# Required for pytest. An account to use for tests that need a JWT. DO NOT COMMIT
TESTING_API_USERNAME=

# Required for pytest. An account password to use for tests that need a JWT. DO NOT COMMIT
TESTING_API_PASSWORD=
