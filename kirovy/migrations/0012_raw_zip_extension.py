# Generated by Django 4.2.20 on 2025-03-18 18:07

import typing

from django.db import migrations
from django.db.backends.postgresql.schema import DatabaseSchemaEditor
from django.db.migrations.state import StateApps

from kirovy.models import CncFileExtension as _Ext, CncUser as _User, CncGame as _Game


def _forward(apps: StateApps, schema_editor: DatabaseSchemaEditor):

    # This is necessary in case later migrations make schema changes to these models.
    # Importing them normally will use the latest schema state and will crash if those
    # migrations are after this one.
    CncFileExtension: typing.Type[_Ext] = apps.get_model("kirovy", "CncFileExtension")
    CncUser: typing.Type[_User] = apps.get_model("kirovy", "CncUser")
    CncGame: typing.Type[_Game] = apps.get_model("kirovy", "CncGame")

    migration_user = CncUser.objects.get_or_create_migration_user()

    zip_ext = CncFileExtension(
        extension="zip",
        extension_type=_Ext.ExtensionTypes.MAP.value,
        about="Raw zip uploads for backwards compatibility with clients CnCNet doesn't control.",
        last_modified_by_id=migration_user.id,
    )
    zip_ext.save()

    for game in CncGame.objects.filter(is_visible=True):
        game.allowed_extensions.add(zip_ext)


def _backward(apps: StateApps, schema_editor: DatabaseSchemaEditor):
    """Deleting the extension on accident could be devastating to the db so no."""
    pass


class Migration(migrations.Migration):

    dependencies = [
        ("kirovy", "0011_alter_cncmapfile_file"),
    ]

    # Elidable=false means that squashmigrations will not delete this.
    operations = [
        migrations.RunPython(_forward, reverse_code=_backward, elidable=False),
    ]
