import pathlib
import uuid

from django.db import models

from kirovy import typing as t
from kirovy.models import cnc_map, file_base, cnc_user, cnc_game


class MapPreview(file_base.CncNetFileBaseModel):
    """An image preview for a C&C Map upload.

    .. note::

        This class has no user link. The link to the user is via
        :attr:`kirovy.models.map_preview.CncMapPreview.cnc_map`.

    .. note::

        Map previews are uploaded to the same directory as map files using
        :func:`kirovy.models.cnc_map.CncMap.get_map_directory_path` through this class's
        :attr:`kirovy.models.map_preview.CncMapPreview.cnc_map`.

    """

    cnc_map_file = models.ForeignKey(cnc_map.CncMapFile, on_delete=models.CASCADE)
    """The map file that this preview belongs to. We link to the file so that we can have version-specific previews."""

    ALLOWED_EXTENSION_TYPES = {
        cnc_game.CncFileExtension.ExtensionTypes.IMAGE.value,
    }

    is_extracted = models.BooleanField(null=False, blank=False)
    """If true, then this image was extracted from the uploaded map file, usually generated by FinalAlert.

    This will always be false for games released after Yuri's Revenge because Generals and beyond do not pack the
    preview image into the map files.
    """

    def save(self, *args, **kwargs):
        self.name = self.cnc_map_file.name
        self.cnc_game = self.cnc_map_file.cnc_game
        return super().save(*args, **kwargs)

    @staticmethod
    def generate_upload_to(instance: "MapPreview", filename: str) -> pathlib.Path:
        """Generate the path to upload map previews to.

        Gets called by :func:`kirovy.models.file_base._generate_upload_to` when ``CncMapFile.save`` is called.
        See [the django docs for file fields](https://docs.djangoproject.com/en/5.0/ref/models/fields/#filefield).
        ``upload_to`` is set in :attr:`kirovy.models.file_base.CncNetFileBaseModel.file`, which calls
        ``_generate_upload_to``, which calls this function.

        :param instance:
            Acts as ``self``. The map preview object that we are creating an upload path for.
        :param filename:
            The filename of the uploaded file.
        :return:
            Path to upload map to relative to :attr:`~kirovy.settings.base.MEDIA_ROOT`.
        """
        filename = pathlib.Path(filename)
        filename_uuid = str(uuid.uuid4()).replace("-", "")
        final_file_name = f"{instance.name}_{filename_uuid}{filename.suffix}"

        # e.g. "yr/maps/CNC_NET_MAP_ID_HEX/ra2_map_file_name_UUID.png
        return pathlib.Path(
            instance.cnc_map_file.cnc_map.get_map_directory_path(), final_file_name
        )
